Center(
    child: Container(
        alignment: Alignment.center,
        height: double.infinity,
        child: SingleChildScrollView(
            child: Padding(
                padding: const EdgeInsets.all(16),
                    child: Form(
                        key: _formKey,
                        child: Column(
                            mainAxisSize: MainAxisSize.min,
                            children: [
                            image != null
                                ?
                                //image view
                                Container(
                                    decoration: BoxDecoration(
                                        borderRadius:
                                        BorderRadius.circular(15)),
                                    padding: const EdgeInsets.symmetric(
                                        horizontal: 12, vertical: 18),
                                        margin: const EdgeInsets.symmetric(
                                            vertical: 8),
                                            child: Stack(
                                                children: [
                                                Column(
                                                    crossAxisAlignment:
                                                    CrossAxisAlignment.start,
                                                    children: [
                                                    SizedBox(
                                                        height: 300,
                                                        width: 300,
                                                        child: Image.file(
                                                            image!,
                                                            width: double.infinity,
                                                            fit: BoxFit.cover,
                                                        ))
                                                ],
                                                ),
                                                Align(
                                                    alignment: Alignment.topRight,
                                                    child: TextButton(
                                                        onPressed: () {
                                                            setState(() {
                                                                image = null;
                                                            });
                                                        },
                                                        child: const Icon(Icons.close),
                                            ),
                                          ),
                                        ],
                                      ),
                                    )
                                  : const Text("choose photo"),
    Row(
        mainAxisAlignment:
        MainAxisAlignment.spaceEvenly,
        children: [
        ElevatedButton(
            style: ElevatedButton.styleFrom(
                backgroundColor:
                Theme.of(context).primaryColor),
            onPressed: getImageCamera,
            child: const Icon(
                Icons.add_a_photo_outlined)),
ElevatedButton(
    style: ElevatedButton.styleFrom(
        backgroundColor:
        Theme.of(context).primaryColor),
    onPressed: getImageGallery,
    child: const Icon(Icons.photo)),
                                ],
                              ),
if (!isPost) buildProgess(),
                              const SizedBox(
    height: 20,
),
    //item name ********************************************
    TextFormField(
        key: const ValueKey("title"),
            validator: (value) {
                if (value!.isEmpty) {
                    return 'please enter item name';
                }
                return null;
            },
                keyboardType: TextInputType.emailAddress,
                    decoration: const InputDecoration(
                        labelText: "item name",
                        filled: true,
                        fillColor:
                            const Color.fromARGB(99, 1, 108, 112),
                                border: OutlineInputBorder(
                                    borderSide: BorderSide.none),
                                    errorBorder: OutlineInputBorder(
                                        borderSide: BorderSide(
                                            width: 3, color: Colors.redAccent),
                                    ),
                                ),
onSaved: ((newValue) {
    title = newValue!;
}),
                              ),
const SizedBox(
    height: 12,
),
    //category ********************************************
    DropdownButtonFormField(
        isExpanded: true,
        value: dropdownvalue,
        decoration: const InputDecoration(
            enabledBorder: OutlineInputBorder(
                borderSide: BorderSide(
                    color: Color.fromARGB(255, 1, 99, 97),
                        width: 2),
                                    ),
focusedBorder: OutlineInputBorder(
    borderSide: BorderSide(
        color:
        Color.fromARGB(255, 3, 140, 143),
        width: 2),
),
    filled: true,
        fillColor: Color.fromARGB(99, 1, 108, 112),
                                  ),
items: items.map((String items) {
    return DropdownMenuItem(
        value: items, child: Text(items));
}).toList(),
    onChanged: (newValue) {
        category = newValue!;
        setState(() {
            dropdownvalue = newValue;
        });
    }),
const SizedBox(
    height: 12,
),
    //price ********************************************
    TextFormField(
        key: const ValueKey("price"),
            validator: (value) {
                if (value!.isEmpty) {
                    return 'please enter price';
                }
                return null;
            },
                decoration: const InputDecoration(
                    labelText: "price",
                    filled: true,
                    fillColor:
                        const Color.fromARGB(99, 1, 108, 112),
                            border: OutlineInputBorder(
                                borderSide: BorderSide.none),
                                errorBorder: OutlineInputBorder(
                                    borderSide: BorderSide(
                                        width: 3, color: Colors.redAccent),
                                ),
                                ),
onSaved: ((newValue) {
    price = newValue!;
}),
                              ),
const SizedBox(
    height: 12,
),
    //description ********************************************
    TextFormField(
        key: const ValueKey("description"),
            validator: (value) {
                if (value!.isEmpty) {
                    return 'please enter a description';
                }
                return null;
            },
                decoration: const InputDecoration(
                    labelText: "description",
                    filled: true,
                    fillColor:
                        const Color.fromARGB(99, 1, 108, 112),
                            border: OutlineInputBorder(
                                borderSide: BorderSide.none),
                                errorBorder: OutlineInputBorder(
                                    borderSide: BorderSide(
                                        width: 3, color: Colors.redAccent),
                                ),
                                ),
onSaved: ((newValue) {
    description = newValue!;
}),
                              ),
const SizedBox(
    height: 12,
),
    //tlegram address ********************************************
    TextFormField(
        key: const ValueKey("telegram address"),
            validator: (value) {
                if (value!.isEmpty) {
                    return 'please enter a tlegram address';
                }
                return null;
            },
                decoration: const InputDecoration(
                    labelText: "telegram address",
                    filled: true,
                    fillColor:
                        const Color.fromARGB(99, 1, 108, 112),
                            border: OutlineInputBorder(
                                borderSide: BorderSide.none),
                                errorBorder: OutlineInputBorder(
                                    borderSide: BorderSide(
                                        width: 3, color: Colors.redAccent),
                                ),
                                ),
onSaved: ((newValue) {
    telegramAdress = newValue!;
}),
                              ),
const SizedBox(
    height: 12,
),
    //phone ********************************************
    TextFormField(
        key: const ValueKey("phone"),
            validator: (value) {
                if (value!.isEmpty) {
                    return 'please enter a phone number';
                }
                return null;
            },
                decoration: const InputDecoration(
                    labelText: "phone",
                    filled: true,
                    fillColor: Color.fromARGB(99, 1, 108, 112),
                        border: OutlineInputBorder(
                            borderSide: BorderSide.none),
                            errorBorder: OutlineInputBorder(
                                borderSide: BorderSide(
                                    width: 3, color: Colors.redAccent),
                            ),
                                ),
onSaved: ((newValue) {
    phoneNumber = newValue!;
}),
                              ),
const SizedBox(
    height: 12,
),
    ElevatedButton(
        style: ElevatedButton.styleFrom(
            backgroundColor:
            Theme.of(context).primaryColor),
        onPressed: _trySubmit,
        child: const Text("Add Post"))
                            ],
                          )),
                    ),
                  ),
                ));






/////sign up back up


Scaffold(
    body: Container(
        height: MediaQuery.of(context).size.height,
        decoration: const BoxDecoration(
            color: Colors.black,
            image: DecorationImage(
                image: AssetImage('./assets/log4.jpg'), fit: BoxFit.cover)),
child: Center(
    child: SingleChildScrollView(
        child: Padding(
            padding: const EdgeInsets.all(16),
                child: Card(
                    color: Colors.black54,
                    child: Form(
                        key: _formKey,
                        child: Column(
                            mainAxisSize: MainAxisSize.min,
                            children: [
                                        const SizedBox(
                                height: 10,
                            ),
    TextFormField(
        style: const TextStyle(color: Colors.white),
            key: const ValueKey("email"),
                validator: (value) {
                    if (value!.isEmpty || !value.contains("@")) {
                        return 'please enter a valid email';
                    }
                    return null;
                },
                    keyboardType: TextInputType.emailAddress,
                        decoration: const InputDecoration(
                            enabledBorder: OutlineInputBorder(
                                borderSide: BorderSide(
                                    width: 3,
                                    color:
                                        Color.fromARGB(255, 43, 255, 0))),
hintStyle: TextStyle(color: Colors.white),
    hintText: "email "),
onSaved: ((newValue) {
    _userEmail = newValue!;
}),
                                        ),
const SizedBox(
    height: 10,
),
    TextFormField(
        obscureText: true,
        style: const TextStyle(color: Colors.white),
            key: const ValueKey("password"),
                validator: (value) {
                    if (value!.isEmpty || value.length < 4) {
                        return 'please enter a valid password';
                    }
                    return null;
                },
                    decoration: const InputDecoration(
                        enabledBorder: OutlineInputBorder(
                            borderSide: BorderSide(
                                width: 3,
                                color:
                                    Color.fromARGB(255, 43, 255, 0))),
hintStyle: TextStyle(color: Colors.white),
    hintText: "password"),
onSaved: ((newValue) {
    _userPassword = newValue!;
}),
                                        ),
const SizedBox(
    height: 12,
),
    ElevatedButton(
        onPressed: _trySubmit,
        style: ElevatedButton.styleFrom(
            backgroundColor: const Color.fromARGB(
                255, 24, 136, 1), // Background color
                                            ),
child: const Text("Sign In ")),
TextButton(
    style: TextButton.styleFrom(
        foregroundColor: Colors.white),
    onPressed: () {
        Navigator.push(
            context,
            MaterialPageRoute(
                builder: (context) => SignUp()));
    },
    child: const Text(
        "Does not Have account? Create Account"))
                                      ],
                                    )),
                              ),
                            ),
                          ),
                        )),
                  );